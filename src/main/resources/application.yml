spring:

  application:
    name: desafio


  kafka:

    producer:
      bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: true
    consumer:
      bootstrap-servers: ${KAFKA_SERVER:http://localhost:9092}
      auto-offset-reset: earliest
      group-id: default-group-id
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.kafka.consumer.trusted-packages: "*"

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  data:
    elasticsearch:
      client:
        rest:
          uris: ${ELASTICSEARCH_URL:http://localhost:9200}
          connection-timeout: 10000
          read-timeout: 10000
      repositories:
        enabled: true


  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/foursales}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver

    hikari:
      maximum-pool-size: 10

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true


server:
  error:
    include-stacktrace: never

springdoc:
  api-docs:
    enabled: true
  enable-hateoas: false

api:
  security:
    token:
      secret: ${JWT_SECRET:12345678}

logging:
  level:
    root: DEBUG
    org.springframework.security: DEBUG


kafka-topics:
  created-order: order.created
  paid-order: order.paid

  created-product: product.created
  updated-product: product.updated